EXPECTED_SECRETS = [
    "EQ_SUBMISSION_SDX_PUBLIC_KEY",
    "EQ_SUBMISSION_SR_PRIVATE_SIGNING_KEY",
    "EQ_SUBMISSION_SR_PRIVATE_SIGNING_KEY_PASSWORD",
    "EQ_USER_AUTHENTICATION_RRM_PUBLIC_KEY",
    "EQ_USER_AUTHENTICATION_SR_PRIVATE_KEY",
    "EQ_USER_AUTHENTICATION_SR_PRIVATE_KEY_PASSWORD",
    "EQ_SERVER_SIDE_STORAGE_USER_ID_SALT",
    "EQ_SERVER_SIDE_STORAGE_USER_IK_SALT",
    "EQ_SERVER_SIDE_STORAGE_ENCRYPTION_USER_PEPPER",
    "EQ_SECRET_KEY",
    "EQ_RABBITMQ_USERNAME",
    "EQ_RABBITMQ_PASSWORD",
    "EQ_SERVER_SIDE_STORAGE_DATABASE_USERNAME",
    "EQ_SERVER_SIDE_STORAGE_DATABASE_PASSWORD",
]


def validate_required_secrets(secrets):
    for required_secret in EXPECTED_SECRETS:
        if required_secret not in secrets:
            raise Exception("Missing Secret [{}]".format(required_secret))
